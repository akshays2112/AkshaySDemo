Since the canvas is the one with all the events you want to pass this to WindowManager.
The Razor components for controls will call RegisterWindow.  RegisterWindow will have mouse input 
events and also drawing functions.
WindowManager on an event or InvalidateRect call will call the registered controls registered
methods to handle the mouse events or the drawing.
If any of the paramters of the component (aka data) are changed then automagically it should
call InvalidateRect in the WindowManager.  Which in the WindowManagers Draw method should in
turn cascade down to the Controls in the region causing them to redraw with the new data
automagically.
Everything is basically driven by events and parameters data changed via the WindowManager.
Each control will choose what events it wants to subscribe to.  No need for all events to be 
registered for a control.  However all possible <canvas> element events should be subscribed
to and should call methods in WindowManager which will manage which controls need to be called 
on an event.
