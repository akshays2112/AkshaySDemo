@page "/YoutubeAPI/youtubelistplaylists"
@using Google.Apis.YouTube.v3
@using Google.Apis.Services
@using Google.Apis.YouTube.v3.Data

<h3>YoutubeListPlaylists</h3>

@foreach (MyPlaylist myPlaylist in myPlaylists)
{
    <table>
        <thead>
            <tr>
                <th>
                    Song in Playlist:: <b>@myPlaylist.Title</b>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (MyPlaylist.MyPlayListItem myPlayListItem in myPlaylist.MyPlayListItems)
            {
            <tr>
                <td>
                    @myPlayListItem.Title
                </td>
            </tr>
            }
        </tbody>
    </table>
    <hr />
}


@code {
    List<MyPlaylist> myPlaylists = new List<MyPlaylist>();

    protected override async Task OnInitializedAsync()
    {
        YouTubeService yts = new YouTubeService(new BaseClientService.Initializer
        {
            ApplicationName = Startup.GoogleApisApplicationName,
            ApiKey = Startup.GoogleApisApiKey
        });
        PlaylistsResource.ListRequest lr = yts.Playlists.List("snippet,contentDetails");
        lr.Mine = true;
        lr.MaxResults = 50;
        lr.AccessToken = Startup.GoogleUserAccessToken;
        IList<Playlist> playlists = (await lr.ExecuteAsync()).Items;
        foreach (Playlist p in playlists)
        {
            MyPlaylist myPlaylist = new MyPlaylist(p.Snippet.Title, p.Id, p.ContentDetails.ItemCount);
            myPlaylists.Add(myPlaylist);
            PlaylistItemsResource.ListRequest pir = yts.PlaylistItems.List("snippet,contentDetails");
            pir.MaxResults = 50;
            pir.AccessToken = Startup.GoogleUserAccessToken;
            pir.PlaylistId = p.Id;
            PlaylistItemListResponse pilr = await pir.ExecuteAsync();
            foreach (PlaylistItem pi in pilr.Items)
            {
                myPlaylist.MyPlayListItems.Add(new MyPlaylist.MyPlayListItem(pi.Snippet.Title, pi.Id));
            }
            while (pilr.NextPageToken != null && pilr.NextPageToken.Length > 0)
            {
                pir.PageToken = pilr.NextPageToken;
                pilr = await pir.ExecuteAsync();
                foreach (PlaylistItem pi in pilr.Items)
                {
                    myPlaylist.MyPlayListItems.Add(new MyPlaylist.MyPlayListItem(pi.Snippet.Title, pi.Id));
                }
            }
        }

        await base.OnInitializedAsync();
    }
}
